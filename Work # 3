class Student:
    def __init__(self, name, surname, gender):
        self.name = name
        self.surname = surname
        self.gender = gender
        self.finished_courses = []  # Завершенные курсы
        self.courses_in_progress = []  # Курсы в процессе изучения
        self.grades = {}  # Оценки за домашние задания

    def rate_lectors(self, lectors, course, grade):
        if isinstance(lectors, Lectors) and course in self.courses_in_progress and course in lectors.courses_attached:
            if course in lectors.grades:
                lectors.grades[course] += [grade]
            else:
                lectors.grades[course] = [grade]
        else:
            print("Лектор или курс не найден")

    def __str__(self):
        s = sum(self.grades.get("Python", [])) / len(self.grades.get("Python", [1])) if self.grades.get("Python") else 0
        return (f"Имя: {self.name}\nФамилия: {self.surname}\nСредняя оценка за домашние задания: {round(s, 1)}\n"
                f"Курсы в процессе изучения: {', '.join(self.courses_in_progress)}\nЗавершенные курсы: "
                f"{', '.join(self.finished_courses)}")

    def __lt__(self, student):
        return sum(self.grades.get("Python", [])) / len(self.grades.get("Python", [1])) < sum(
            student.grades.get("Python", [])) / len(student.grades.get("Python", [1]))


class Mentor:
    def __init__(self, name, surname):
        self.name = name
        self.surname = surname
        self.courses_attached = []  # Курсы, на которые подписан преподаватель


class Lectors(Mentor):
    def __init__(self, name, surname):
        super().__init__(name, surname)
        self.courses_attached = []
        self.grades = {}

    def __str__(self):
        b = sum(self.grades.get("Python", [])) / len(self.grades.get("Python", [1]))
        return f"Имя: {self.name}\nФамилия: {self.surname}\nСредняя оценка за лекции: {round(b, 1)} "

    def __lt__(self, lectors):
        return ((sum(self.grades["Python"]) / len(self.grades["Python"])) <
                (sum(lectors.grades["Python"]) / len(lectors.grades["Python"])))


class Reviewer(Mentor):
    def __init__(self, name, surname):
        super().__init__(name, surname)

    def rate_hw(self, student, course, grade):
        if isinstance(student, Student) and course in self.courses_attached and course in student.courses_in_progress:
            # Проверяем, существует ли студент, есть ли он на курсе преподавателя и есть ли он на курсе студента
            if course in student.grades:
                student.grades[course] += [grade]
            else:
                student.grades[course] = [grade]
        else:
            print("Студент или курс не найден")

    def __str__(self):
        return f"Имя: {self.name}\nФамилия: {self.surname}"


student1 = Student('Алексей', 'Алексеевич', 'Мужчина')
student1.courses_in_progress += ['Python']
student1.finished_courses += ['Git']

student2 = Student('Иван', 'Иванович', 'Мужчина')
student2.courses_in_progress += ['Python']
student2.finished_courses += ['Git']

lector1 = Lectors("Сергей", "Сергеевич")
lector1.courses_attached += ['Python']

lector2 = Lectors("Антон", "Антонович")
lector2.courses_attached += ['Python']

reviewer1 = Reviewer('Антон', 'Антонович')
reviewer1.courses_attached += ['Python']

reviewer2 = Reviewer('Сергей', 'Сергеевич')
reviewer2.courses_attached += ['Python']

reviewer1.rate_hw(student1, 'Python', 3)
reviewer1.rate_hw(student1, 'Python', 6)
reviewer1.rate_hw(student1, 'Python', 5)

reviewer2.rate_hw(student2, 'Python', 10)
reviewer2.rate_hw(student2, 'Python', 7)
reviewer2.rate_hw(student2, 'Python', 2)

student1.rate_lectors(lector1, 'Python', 4)
student1.rate_lectors(lector1, 'Python', 5)
student1.rate_lectors(lector1, 'Python', 8)

student2.rate_lectors(lector2, 'Python', 10)
student2.rate_lectors(lector2, 'Python', 9)
student2.rate_lectors(lector2, 'Python', 8)

print(reviewer1)
print(lector1)
print(student1)

if lector1 < lector2:
    print(f"У лектора {lector1.name} {lector1.surname} средняя оценка выше")
else:
    print(f"У лектора {lector2.name} {lector2.surname} средняя оценка выше")

if student1 < student2:
    print(f"У студента {student1.name} {student1.surname} средняя оценка выше")
else:
    print(f"У студента {student2.name} {student2.surname} средняя оценка выше")
